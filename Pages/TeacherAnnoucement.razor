@page "/TeacherAnnoucement"
@using LoginExample.Data
@using LoginExample.Data.Impl
@using LoginExample.Extra
@using LoginExample.Models
@inject IUserService _service;


<hr style=" border: 2px solid white" />
<br>

<h3 style="text-align: center; font-family: 'Arial Black'; font-size: 2.5vw">Announcement</h3>

<div style="display: flex; flex-direction: column; width: 100%; height: 70vh; text-align: center; justify-content: center; align-items: center; margin-top: -4%">
    <input @bind="_announcement.content" style="width: 50%; height: 30%; color: black; background-color: rgba(255,255,255,0.5); margin-top: 2%" placeholder="Content">
</div>
<button @onclick="upload" style="margin-top: 2%; margin-left: 90%">Upload</button>

@code {
    private CourseData _courseData = new CourseDataService();

    private Announcement _announcement = new Announcement();

    private Time _time = new Time();


    public async void upload()
    {
        if (_service.getName().Equals("Jan"))
        {
            Announcement announcement = new Announcement()
            {
                content = _announcement.content,
                courseName = "SDJ",
                LecturerName = _service.getName(),
                time = _time.getNowTime()
            };
            Console.WriteLine("announcement");
            await _courseData.addAnnouncement(announcement);
            
        }
        else if (_service.getName().Equals("Troels Mortensen"))
        {
            Announcement announcement = new Announcement()
            {
                content = _announcement.content,
                courseName = "DNP",
                LecturerName = _service.getName(),
                time = _time.getNowTime()
            };
            await _courseData.addAnnouncement(announcement);
        }
        else if (_service.getName().Equals("Poul Væggemose"))
        {
            Announcement announcement = new Announcement()
            {
                content = _announcement.content,
                courseName = "NES",
                LecturerName = _service.getName(),
                time = _time.getNowTime()
            };
            await _courseData.addAnnouncement(announcement);
        }
        else if (_service.getName().Equals("Lars Bech Sørensen"))
        {
            Announcement announcement = new Announcement()
            {
                content = _announcement.content,
                courseName = "CAO",
                LecturerName = _service.getName(),
                time = _time.getNowTime()
            };
            await _courseData.addAnnouncement(announcement);
        }
        
        
        
        
    }



}