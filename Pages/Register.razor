@page "/Register"
@using LoginExample.Models
@using LoginExample.Data
@using LoginExample.Data.Impl
@inject NavigationManager NavigationManager

<div style="display:flex; flex-direction: column; height: 75vh">
    <form>
    <input style="background-color: rgba(0,0,0,0.5); width: 40%; justify-content: center; align-items: center; margin-top: 50px" placeholder="username" @bind="username">
    <br><br>
    <input style="background-color: rgba(0,0,0,0.5); width: 40%" placeholder="password" @bind="password">
    <br><br>
    <input style="background-color: rgba(0,0,0,0.5); width: 40%" placeholder="password again"@bind="passwordagain">
    <br><br>
    <button @onclick="CreateUser" style="color: #8fd19e; background: transparent; border: 1px solid black; border-radius: 1vw; width: 200px">Register</button>
    <br><br>
    <button @onclick="Cancel" style="color: #8fd19e; background: transparent; border: 1px solid black; border-radius: 1vw; width: 200px">Cancel</button>
    </form>
</div>



@code {
    private String username;
    private String password;
    private String passwordagain;
    private UserData _userData = new UserDataService();


    public async void CreateUser()
    {
        User user = new User()
        {
            Username = username,
            Password = password
        };

        if (username!=null && password!=null && passwordagain!=null)
        {
            if (password.Equals(passwordagain))
            {
                await _userData.post(user);
                NavigationManager.NavigateTo("/Login");
            }
        }
        
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/Login");
    }



}