@page "/login"
@namespace LoginComponent
@using LoginExample.Authentication
@using LoginExample.Data
@using LoginExample.Data.Impl
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="login">
            <h1 class="name">ilearning</h1>
            <br>

            <div class="form-group">
                <form>
                    <input style="color: #6f42c1; background-color: rgba(0,0,0,0.55);border-radius: 30px;width: 250px;height: 30px;text-align: center" type="text" placeholder="user name" @bind-value="username"/>
                    <br>
                    <input style="color: #6f42c1; background-color: rgba(0,0,0,0.55);border-radius: 30px;width: 250px;height: 30px;text-align: center" type="password" placeholder="password" @bind-value="password"/>
                </form>
                <div class="form-class">
                    <button type="submit" @onclick="PerformLogin" style="border-radius: 10px;width: 80px;height: 35px">
                        Login
                    </button>

                    <button type="button" @onclick="goRegister" style="border-radius: 10px;width: 80px;height: 35px; margin-left: 90px">
                        Register
                    </button>
                </div>
            </div>
            <div style="color:red">@errorMessage</div>
        </div>
        
    </NotAuthorized>
</AuthorizeView>
 
@code {
    
    public string username;
    private string password;
    private string errorMessage;
    private UserData _userData = new UserDataService();

    public async Task PerformLogin() {
        errorMessage = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
        } catch (Exception e) {
            errorMessage = e.Message;
        }
    }

    public void goRegister()
    {
        NavigationManager.NavigateTo("/Register");
    }

    public String getusername()
    {
        return username;
    }

}